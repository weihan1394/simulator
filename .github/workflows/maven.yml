name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'adopt'
          cache: maven

      - name: Cache the Maven packages to speed up build
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2      
      
      - name: Build
        run: mvn -DskipTests -B package --file pom.xml

      # ignore fail test so that next stage can generate report
      - name: Test
        run: |
          mvn --batch-mode -Dmaven.test.failure.ignore=true test
          ls -la
          cd target

      - name: Publish Test Results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Maven Tests
          path: target/surefire-reports/*.xml
          reporter: java-junit
          fail-on-error: true

      # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  publish-job:
      runs-on: ubuntu-latest
      needs: [build_and_test]

      steps:
        - uses: actions/checkout@v2

        - name: Set up JDK 11
          uses: actions/setup-java@v3
          with:
            java-version: 11
            distribution: 'adopt'
            cache: maven
        - run: mvn -B package --file pom.xml -DskipTests
        - run: mkdir staging && cp target/*.jar staging

        - name: upload build
          uses: actions/upload-artifact@v1
          with:
            name: Package
            path: staging

  dockerize:
      runs-on: ubuntu-latest
      needs: [publish-job]

      steps:

        - name: Check out the repo
          uses: actions/checkout@v4

        - name: Build docker image
          run: |
            docker build . -t weihan1394/simulator:latest -f Dockerfile

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v3
          
        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v3
        
        - name: Set env
          run: echo "DATE=$(date +%s)" >> $GITHUB_ENV

        - name: Login to dockerhub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USERNAME }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Build and push to dockerhub
          uses: docker/build-push-action@v5
          with:
            context: .
            file: ./Dockerfile
            push: true
            tags: weihan1394/simulator:${{ env.DATE }}